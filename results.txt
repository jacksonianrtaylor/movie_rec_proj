#idea:

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# Average r2_score without rounding: 0.25497742034431536
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22800211045289098
# Note: the accuracy values check out after rerun


mlp layer options with n = 20, 10:

# idea: since 20, 10 is the best svd inputs for the linear regression model above...
# they should be close to the best inputs for the mlp models below
 
# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp 10,10,5
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# Average r2_score without rounding: 0.25769840583281306
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2338579730790375
# Note: the accuracy values check out after rerun

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp 10,5,5
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# Average r2_score without rounding: 0.2566793068613578
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.23053965092422135
# Note: the accuracy values check out after rerun

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp 10,10,10
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# Average r2_score without rounding: 0.25719055444369615
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.23893305402169931
# Note: the accuracy values check out after rerun

#best n value for linear regression:

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (10, 15) for svd train and full
# Average r2_score without rounding: 0.27338731662383964
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.25213661807645976
# Note: the accuracy values check out after rerun

mlp layer options with n = (10, 15):

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp layers = (10,10,10)
# train user threshold: 30-50, test user threshold: 5-10
# n = (10, 15) for svd train and full
# Average r2_score without rounding: 0.2753146424711614
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2546462267406327

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp layers = (10,10,5)
# train user threshold: 30-50, test user threshold: 5-10
# n = (10, 15) for svd train and full
# Average r2_score without rounding: 0.27639324087457673
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.25894841302207205

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp layers = (10,5,5)
# train user threshold: 30-50, test user threshold: 5-10
# n = (10, 15) for svd train and full
# Average r2_score without rounding: 0.272801130005713
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2546462267406327


feature 2 and 3 30-50 5-10:

# idea: The full corpus is clearly more effective then the single column genre 
# so only one test is done with the single column, genres

# number of users, train: 5000, test: 1000
# featurs: feature 2 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = 10, 15 for svd train and full
# corpus: genres
Average r2_score without rounding: 0.22779569071224418
Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2177191278249457


#idea: To be sure that a strong mlp model does not make feature_2 stronger than feature_1

# number of users, train: 5000, test: 1000
# featurs: feature 2 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = 10, 15, for svd train and full
# corpus: "title", "genres","production_companies","keywords", "cast", "tagline", "overview"
# Average r2_score without rounding: 0.24918752474093955
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2152095191607727

# number of users, train: 5000, test: 1000
# featurs: feature 2 and feature 3
# model type: mlp (10,10,10)
# train user threshold: 30-50, test user threshold: 5-10
# n = 10, 15, for svd train and full
# corpus: "title", "genres","production_companies","keywords", "cast", "tagline", "overview"
# Average r2_score without rounding: 0.2463272401721828
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22148354082120425

# number of users, train: 5000, test: 1000
# featurs: feature 2 and feature 3
# model type: mlp (10,10,5)
# train user threshold: 30-50, test user threshold: 5-10
# n = 10, 15, for svd train and full
# corpus: "title", "genres","production_companies","keywords", "cast", "tagline", "overview"
# Average r2_score without rounding: 0.24976592718907065
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22112502529775188


# number of users, train: 5000, test: 1000
# featurs: feature 2 and feature 3
# model type: mlp (10,5,5)
# train user threshold: 30-50, test user threshold: 5-10
# n = 10, 15, for svd train and full
# corpus: "title", "genres","production_companies","keywords", "cast", "tagline", "overview"
# Average r2_score without rounding: 0.2525056422155743
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22793682024336415


# number of users, train: 5000, test: 1000
# featurs: feature 2 and feature 3
# model type: mlp (5,5,5)
# train user threshold: 30-50, test user threshold: 5-10
# n = 10, 15, for svd train and full
# corpus: "title", "genres","production_companies","keywords", "cast", "tagline", "overview"
# Average r2_score without rounding: 0.2482534294087106
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.23385232638034348


# Note: only need to show a single linear rgression test with...
11-20, 5-10
#this is to show that ther is a sweat spot for the train users bounds
#for test users bounds of 5-10