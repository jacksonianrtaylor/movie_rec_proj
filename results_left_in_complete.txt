# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 10, 10 for svd train and full
# Average r2_score without rounding: 0.25426664596078186
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22858769671550502

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 10, 5 for svd train and full
# Average r2_score without rounding: 0.2527266136008528
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22917328297812023

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 10, 15 for svd train and full
# Average r2_score without rounding: 0.25087510963971754
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22136546614325678

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 15, 10 for svd train and full
# Average r2_score without rounding: 0.25492100861611444
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22897808755724827

#Note: current best
# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# Average r2_score without rounding: 0.25497742034431536
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22800211045289098

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 25, 10 for svd train and full
# Average r2_score without rounding: 0.2545827456752823
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2283925012946332


#results break: the best above configuration is tested with 3 different sets of mlp layers instead of linear regression

# best performing:
# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp 10,10,5
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# Average r2_score without rounding: 0.2576396200547925
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22409820203545902

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp 10,5,5
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# Average r2_score without rounding: 0.25118639406199256
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.23444355934165273

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: mlp 10,10,10
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# Average r2_score without rounding: 0.25687956492241076
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.23210121429119376

# results break...feature_2 and feature_3:
# note: the results here show that feature 2 and feature 3 are a worse combination than feature 1 and feature 3

# number of users, train: 5000, test: 1000
# featurs: feature 2 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 20, 10 for svd train and full
# corpus: genres
# Average r2_score without rounding: 0.21892291084266102
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.20379787826481427

# number of users, train: 5000, test: 1000
# featurs: feature 2 and feature 3
# model type: linear regression
# train user threshold: 50-70, test user threshold: 5-10
# n = 20,10, for svd train and full
# corpus: "title", "genres","production_companies","keywords", "cast", "tagline", "overview"
# Average r2_score without rounding: 0.22770238896575312
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.20165072863522687


#other tests::
# features: feature 2 and feature 3
# train user threshold: 30-50
# n = 10, 15, for svd train and full
# model type: mlp (10,10,10)
# corpus: "title", "genres","production_companies","keywords", "cast", "tagline", "overview"
# Average r2_score without rounding: 0.2463272401721828
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.22148354082120425


#results break...
#Note: testing different values of n on 30-50 data with linear regression

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (20, 10) for svd train and full
# Average r2_score without rounding: 0.27149703415187076
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.24890997836538026


# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (15, 10) for svd train and full
# Average r2_score without rounding: 0.2718293007176589
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.24747591627156765


# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (10, 10) for svd train and full
# Average r2_score without rounding: 0.27226290326111774
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2510610715061005

#Note: current best
# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (10, 15) for svd train and full
# Average r2_score without rounding: 0.27338731662383964
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.25213661807645976


# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (15, 15) for svd train and full
# Average r2_score without rounding: 0.2729522076848179
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2481929473184745

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (10, 20) for svd train and full
# Average r2_score without rounding: 0.2702348903399204
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2501647826974675

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (15, 20) for svd train and full
# Average r2_score without rounding: 0.2697906693811615
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.24783443179502052

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (5,10) for svd train and full
# Average r2_score without rounding: 0.2721016359772364
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2512403292678265

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 30-50, test user threshold: 5-10
# n = (10,5) for svd train and full
#Average r2_score without rounding: 0.26959439763993137
#Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.2544669689789067

# LOOK: instead of testing every combination of layers with mlp
#it can instead be ignored since the mlp model does not seam to significantly impove perfromance
#a few side by side comparisons can be made between linear regrssion and some but not all mlp models

#LOOK: for some reason the train 30-50 is a better model then the 50-70 with the current configurations
#also the firts n has perf beneifts for being lower than the second for 30-50
#and it is the opposite for 50-70

#LOOK: need to test 11-20 to be sure that there is a sweat spot for train bounds instead of the best outcome being equal to the test bounds 

#results 11-20: 
#LOOK: it seems from this test that there is a sweat spot for train and test threasholds

#LOOK: in order to prove this in the readme some of these results shold be present


# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 11-20, test user threshold: 5-10
# n = (10,10) for svd train and full
# Average r2_score without rounding: 0.18512234175542613
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.17332710903090548

#current best
# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 11-20, test user threshold: 5-10
# n = (10,15) for svd train and full
# Average r2_score without rounding: 0.18710233739407628
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.1699900128125956

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 11-20, test user threshold: 5-10
# n = (15,10) for svd train and full
# Average r2_score without rounding: 0.18338505979975786
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.1649843684851308

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 11-20, test user threshold: 5-10
# n = (10,20) for svd train and full
# Average r2_score without rounding: 0.1847718914437277
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.17295632056220397

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 11-20, test user threshold: 5-10
# n = (10,5) for svd train and full
# Average r2_score without rounding: 0.18030874995510932
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.16331582037597583

# number of users, train: 5000, test: 1000
# features: feature 1 and feature 3
# model type: linear regression
# train user threshold: 11-20, test user threshold: 5-10
# n = (5,10) for svd train and full
# Average r2_score without rounding: 0.18617914295679086
# Average r2_score with rounded prediction to nearest .5 (note: the actual ratings a user makes must be divisable by .5): 0.1727709263278535
